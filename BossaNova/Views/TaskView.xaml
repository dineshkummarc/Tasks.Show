<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c="clr-namespace:Tasks.Show.Controls" xmlns:h="clr-namespace:Tasks.Show.Helpers" xmlns:vm="clr-namespace:Tasks.Show.ViewModels" xmlns:wpf="clr-namespace:PixelLab.Wpf;assembly=PixelLab.Wpf" xmlns:u="clr-namespace:Tasks.Show.UserControls" xmlns:utils="clr-namespace:Tasks.Show.Utils" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" x:Class="Tasks.Show.Views.TaskView" mc:Ignorable="d" xmlns:helpers="clr-namespace:Tasks.Show.Helpers">

    <Grid>
        <Grid.Resources>

            <utils:PrettyDateConverter x:Key="PrettyDateConverter" ShowOverdue="False" />

        </Grid.Resources>

        <Grid x:Name="LayoutRoot" MinHeight="58">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="41" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Grid.Row="1" Grid.ColumnSpan="5" Height="5" VerticalAlignment="Bottom" Margin="0,0,1,-5" IsHitTestVisible="False" BorderBrush="#60000000" BorderThickness="0,1,0,0">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#18000000" />
                        <GradientStop Offset="1" Color="#0000" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <!-- Background -->
            <Border Grid.ColumnSpan="3" Grid.RowSpan="2" Background="#EBEFF0" />
            <Border Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#D6DCDE" />

            <!-- FolderColor -->
            <Border Width="5" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Left" Background="{Binding Path=Task.Folder.Color, Converter={x:Static wpf:ColorBrushConverter.Instance}}" />

            <!-- Edges -->
            <Border Grid.ColumnSpan="3" Grid.RowSpan="100" BorderThickness="0,1" Margin="0,0,0,0" HorizontalAlignment="Left" Width="5">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#40FFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border Grid.ColumnSpan="3" Grid.RowSpan="100" BorderThickness="0,1" Margin="5,0,0,0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FFFFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="100" BorderThickness="0,1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#80FFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>

            <!-- Delete Button -->
            <Button Style="{StaticResource OpacityButton}" VerticalAlignment="Center" Click="Button_Click" HorizontalAlignment="Right" Grid.Column="2" Grid.RowSpan="2" Width="40" Height="40" IsEnabled="{Binding IsMouseOver, ElementName=LayoutRoot}" ToolTip="Delete This Task">
                <Border VerticalAlignment="Center" HorizontalAlignment="Center">
                    <c:PixelAlignedImage Source="{StaticResource DeleteXImageSource}" />
                </Border>
            </Button>

            <!-- IsComplete -->
            <CheckBox Grid.RowSpan="3" Grid.Column="1" Margin="-4,-1,4,0" VerticalAlignment="Center" Style="{StaticResource CompletedCheckBox}" IsChecked="{Binding Path=Task.Completed, Converter={x:Static helpers:BoolToNullableDateTimeConverter.Instance }}" ToolTip="Completed" />

            <!-- Description -->
            <c:EditableTextBlock Grid.Column="2" Margin="-6,4,40,-4" VerticalAlignment="Bottom" Text="{Binding Task.Description}" TextWrapping="Wrap">
                <c:EditableTextBlock.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}" />
                        <Setter Property="FontSize" Value="17" />
                        <Setter Property="FontWeight" Value="Light" />
                        <Setter Property="AllowDrop" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="Border" Background="#00FFFFFF">
                                        <Grid>
                                            <ScrollViewer x:Name="PART_ContentHost" Margin="6,2,6,4" />
                                            <TextBlock x:Name="InvisibleText" Text="{TemplateBinding Text}" Opacity="0" HorizontalAlignment="Left" IsHitTestVisible="False" />
                                            <Rectangle x:Name="CrossoutRectangle" Height="1" Margin="8,2,4,-2" VerticalAlignment="Center" Width="{Binding ActualWidth, ElementName=InvisibleText}" HorizontalAlignment="Left" Fill="#C02A2F31" Visibility="Collapsed" IsHitTestVisible="False" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE" />
                                            <Setter Property="Foreground" Value="#888888" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </c:EditableTextBlock.Style>
            </c:EditableTextBlock>

            <!-- Drag Grip -->
            <Border Background="#00FF" Cursor="SizeAll" Grid.RowSpan="2" wpf:ReorderListBox.IsDragElement="True" DataContext="{Binding Task}">
                <Border VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0,-4,0">
                    <c:PixelAlignedImage Source="{StaticResource GripImageSource}" />
                </Border>
            </Border>

            <!-- Due Date -->
            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Margin="2,0,0,0" VerticalAlignment="Top" Visibility="{Binding Task.IsComplete, Converter={StaticResource ReverseBooleanToVisibilityConverter}}" ToolTip="Due Date">
                <TextBlock Foreground="#D0252b2d" FontSize="14" Text="by" VerticalAlignment="Center" />
                <u:DateDropDown Date="{Binding Task.Due, Mode=TwoWay}" FontSize="14" Margin="-4,0,0,0" FontWeight="Bold" ShowOverdue="True" />
            </StackPanel>

            <!-- Completed -->
            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Margin="2,0,0,0" VerticalAlignment="Top" Visibility="{Binding Task.IsComplete, Converter={StaticResource BooleanToVisibilityConverter}}" ToolTip="Date Completed">
                <TextBlock Foreground="#D0252b2d" FontSize="14" Text="completed" VerticalAlignment="Center" />
                <TextBlock Foreground="#000000" FontSize="14" Text="{Binding Task.Completed, Converter={StaticResource PrettyDateConverter}}" VerticalAlignment="Center" FontWeight="Bold" Margin="4,0,0,0" />
            </StackPanel>

            <Grid Grid.RowSpan="2" Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Folder Name -->
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="24,2,24,-2" VerticalAlignment="Bottom" Opacity="{Binding Task.IsComplete, Converter={StaticResource DimCompleteItemConverter}}" ToolTip="Folder">
                    <TextBlock Foreground="#D0252b2d" FontSize="14" Text="in" VerticalAlignment="Center" />
                    <u:FolderDropDown FontSize="14" Margin="-4,0,0,0" FontWeight="Bold" RequestFolderChange="FolderDropDown_RequestFolderChange" />
                </StackPanel>

                <!-- Time to Complete -->
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="24,0,24,0" VerticalAlignment="Top" Opacity="{Binding Task.IsComplete, Converter={StaticResource DimCompleteItemConverter}}" ToolTip="Time To Complete">
                    <TextBlock FontSize="14" Foreground="#D0252b2d" Text="for" VerticalAlignment="Center" />
                    <u:TimeSpanDropDown FontSize="14" Duration="{Binding Task.Estimate, Mode=TwoWay}" Margin="-4,0,0,0" FontWeight="Bold" />
                </StackPanel>

            </Grid>

            <!-- IsImportant -->
            <c:ReverseThreeStateCheckBox Grid.Column="5" Grid.RowSpan="100" IsChecked="{Binding Task.IsImportant}" IsThreeState="True" IsEnabled="{Binding IsMouseOver, ElementName=LayoutRoot}" Cursor="Hand" ToolTip="Priority">
                <c:ReverseThreeStateCheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Background="#0000">
                                        <Border x:Name="NullImage" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Center" Width="15" Height="15">
                                            <c:PixelAlignedImage Source="..\Images\check_null.png" />
                                        </Border>
                                        <Border x:Name="TrueImage" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Width="15" Height="15">
                                            <c:PixelAlignedImage Source="..\Images\check_true.png" />
                                        </Border>
                                        <Border x:Name="FalseImage" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Width="15" Height="15">
                                            <c:PixelAlignedImage Source="..\Images\check_false.png" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NullImage" Storyboard.TargetProperty="Opacity" To="0.0" Duration="00:00:00.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NullImage" Storyboard.TargetProperty="Opacity" To="0.5" Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NullImage" Storyboard.TargetProperty="Opacity" To="1.0" Duration="00:00:00.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NullImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="TrueImage" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="NullImage" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter TargetName="FalseImage" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="NullImage" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>

                        </Setter>
                    </Style>
                </c:ReverseThreeStateCheckBox.Style>
            </c:ReverseThreeStateCheckBox>

        </Grid>

    </Grid>

</UserControl>
